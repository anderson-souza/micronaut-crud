plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "1.5.3"
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

version = "0.1"
group = "com.aps"

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.aps.*")
    }
}

nativeImage {
    args('--verbose')

    imageName('mn-graalvm-application')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-graal")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi:2.5.0")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("javax.annotation:javax.annotation-api")
    implementation("org.apache.logging.log4j:log4j-core:2.14.1")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("com.google.guava:guava:30.1.1-jre")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut.liquibase:micronaut-liquibase")

    compileOnly("org.projectlombok:lombok")
    compileOnly("org.graalvm.nativeimage:svm")

    runtimeOnly("com.h2database:h2")
    runtimeOnly("ch.qos.logback:logback-classic")

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5:2.3.7")
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'com.tngtech.archunit:archunit:0.20.1'
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.2")
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}


application {
    mainClass.set("com.aps.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}



